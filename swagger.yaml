openapi: 3.0.3
info:
  title: Team 3 - MIOT Winter 2023
  description: |-
    This is a project in the MIOT for team 3 (2023). The vision of the project is to measure desk usage and occupancy in an open space office with a shared desk system. That is, measuring office saturation and occupancy based on the use of the assigned desk drawer.
    
    
    Some useful links:
    - [MIOT - Project Assignment (Winter 2023)](https://uuapp.plus4u.net/uu-dockit-maing02/4e68298f1658473e9bf5692272883290/document?documentId=64ca0bd8c46f1100362d1f3d)
    - [MIOT Project portal](https://uuapp.plus4u.net/uu-dockit-maing02/4e68298f1658473e9bf5692272883290/document?documentId=650aaaa41902620036947e0f)
    - [MIOT 2023 Team 3: Business Request](https://uuapp.plus4u.net/uu-bookkit-maing01/b444055f261147fc91f25a245db8b1f2/book/page?code=home)
    - [MIOT 2023 Team 3: Business Model](https://uuapp.plus4u.net/uu-bookkit-maing01/987d412d622c416eaa808522ac6847ef/book/page?code=home)
    - [MIOT 2023 Team 3: Application Model](https://uuapp.plus4u.net/uu-bookkit-maing01/60aa712dd4284380a6bc60413022d8dd/book/page?code=home)
    - GitHub repository [UNNBoomers/miot-project](https://github.com/UNNBoomers/miot-project)
  contact:
    email: tym3@unicornuniverse.net
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.1.0
paths:
  /desks:
    get:
      tags:
        - desk
      summary: Get list of all desks
      description: Get a list of all desks in the office.
      operationId: getObject
      parameters:
        - in: query
          name: deskIds
          schema:
            type: array
            items:
              type: string
          description: The list of desks the endpoint should return. If empty, all desks are returned.
          required: false
        - in: query
          name: count
          schema:
            type: integer
          required: false
          example: 10
          description: Number of units defining interval from which data should be returned.
        - in: query
          name: unit
          schema:
            type: string
            enum:
              - days
              - weeks
              - months
              - years
          required: false
          example: "days"
          description: Time unit of interval from which data should be returned.

      responses:
          '200':
            description: List of all desks in the office
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Desk'
components:
  schemas:
    Desk:
      type: object
      properties:
        id:
          type: integer
          description: unique id of table with the device
          example: 01
        status:
          type: string
          description: Desk usage status
          enum:
            - active
            - inactive
            - archived
        lastUsed:
          type: string
          format: date-time
          description: Datetime when the desk was last in use
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}:[0-9]{3}Z$"
          example: "2023-01-01T11:40:00.000Z"
        averageWorkhoursUsage:
          type: number
          format: float
          description: Average daily usage of the desk during workhours in minutes for the selected interval
          example: 120.1
        averageDailyUsage:
          type: number
          format: float
          description: Average daily usage of the desk in minutes for the selected interval
          example: 183.5
        shortUsagesCounts:
          type: integer
          format: int32
          description: Number of short term (under 15 minutes) usages of the desk during the selected interval
          example: 17
