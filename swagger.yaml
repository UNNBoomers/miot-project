openapi: 3.0.3
info:
  title: Team 3 - MIOT Winter 2023
  description: |-
    This is a project in the MIOT for team 3 (2023). The vision of the project is to measure desk usage and occupancy in an open space office with a shared desk system. That is, measuring office saturation and occupancy based on the use of the assigned desk drawer.
    
    
    Some useful links:
    - [MIOT - Project Assignment (Winter 2023)](https://uuapp.plus4u.net/uu-dockit-maing02/4e68298f1658473e9bf5692272883290/document?documentId=64ca0bd8c46f1100362d1f3d)
    - [MIOT Project portal](https://uuapp.plus4u.net/uu-dockit-maing02/4e68298f1658473e9bf5692272883290/document?documentId=650aaaa41902620036947e0f)
    - [MIOT 2023 Team 3: Business Request](https://uuapp.plus4u.net/uu-bookkit-maing01/b444055f261147fc91f25a245db8b1f2/book/page?code=home)
    - [MIOT 2023 Team 3: Business Model](https://uuapp.plus4u.net/uu-bookkit-maing01/987d412d622c416eaa808522ac6847ef/book/page?code=home)
    - [MIOT 2023 Team 3: Application Model](https://uuapp.plus4u.net/uu-bookkit-maing01/60aa712dd4284380a6bc60413022d8dd/book/page?code=home)
    - GitHub repository [UNNBoomers/miot-project](https://github.com/UNNBoomers/miot-project)
  contact:
    email: tym3@unicornuniverse.net
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.1.0

security:
  - api_key: [ ]

paths:
  /desks:
    get:
      tags:
        - Desks
      summary: Get list of desks
      description: Retrieve a list of all or selected desks in a zone.
      operationId: getDesks
      parameters:
        - in: query
          name: zoneId
          schema:
            type: string
          required: true
          example: "floor0"
          description: Identifier of the zone where requested desks are located.
        - in: query
          name: deskIds
          schema:
            type: array
            items:
              type: string
          description: The list of desk identifiers the endpoint should return. If empty or null, all desks are returned.
          required: false
        - in: query
          name: count
          schema:
            type: integer
            minimum: 1
          required: false
          example: 7
          description: Number of units defining interval from which data should be returned. If null, default value of 7 is used.
        - in: query
          name: unit
          schema:
            type: string
            enum:
              - day
              - week
          required: false
          example: "day"
          description: Time unit of interval from which data should be returned. If null, default value of `day` is used.
      responses:
        '200':
          description: List of all desks in the office.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Desk'
        '404':
          description: The selected zone doesn't exist.
        '401':
          description: Unauthorized.
        '400':
          description: Bad request. Check if the provided desk ids, interval count and unit are valid.
        '500':
          description: Server error.

    post:
      tags:
        - Desks
      summary: Create a desk
      description: Create a desk within a zone. Only available to Admin users.
      operationId: postDesk
      requestBody:
        required: true
        description: Info about the new desk.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDeskRequest'
      responses:
        '201':
          description: The desk has been created.
        '401':
          description: Unauthorized.
        '404':
          description: The selected zone doesn't exist.
        '500':
          description: Server error.

    delete:
      tags:
        - Desks
      summary: Delete a desk
      description: Delete a desk within a zone. Only available to Admin users.
      operationId: deleteDesk
      parameters:
        - in: query
          name: zoneId
          schema:
            type: string
          required: true
          example: "floor0"
          description: Identifier of the zone where the desk is located.
        - in: query
          name: deskId
          schema:
            type: string
          required: true
          example: "c74caac5-ff7e-4019-8cea-54ad82423776"
          description: Identifier of the desk to be deleted.
      responses:
        '200':
          description: The desk has been deleted.
        '401':
          description: Unauthorized.
        '404':
          description: The selected zone doesn't exist or the selected desk doesn't exist within selected zone.
        '500':
          description: Server error.

  /zones:
    get:
      tags:
        - Zones
      summary: Get list of zones.
      description: Retrieve a list of all zones.
      operationId: getZones
      responses:
        '200':
          description: List of all zones in the office.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Zone'
        '401':
          description: Unauthorized.
        '500':
          description: Server error.
  /default:
    get:
      tags:
        - Default
      summary: Default endpoint for API key validation.
      description: Default endpoint for API key validation.
      operationId: getDefault
      responses:
        '200':
          description: OK.
        '401':
          description: Unauthorized.
        '500':
          description: Server error.

components:
  schemas:
    Desk:
      type: object
      properties:
        id:
          type: string
          description: Unique id of desk with the device.
          example: "c74caac5-ff7e-4019-8cea-54ad82423776"
        name:
          type: string
          description: Display name of desk with the device.
          example: "Desk Desk"
        zoneId:
          type: string
          description: Unique id of zone containing the desk.
          example: "floor-1"
        status:
          type: string
          description: Desk usage status.
          enum:
            - active
            - inactive
            - offline
        lastUsed:
          type: string
          format: date-time
          description: Datetime when the desk was last in use.
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}:[0-9]{3}Z$"
          example: "2023-01-01T11:40:00.000Z"
        averageWorkhoursUsage:
          type: number
          format: float
          description: Average daily usage of the desk during workhours in minutes for the selected interval.
          example: 120.1
        averageDailyUsage:
          type: number
          format: float
          description: Average daily usage of the desk in minutes for the selected interval.
          example: 183.5
        shortUsagesCounts:
          type: integer
          format: int32
          description: Number of short term (under 15 minutes) usages of the desk during the selected interval.
          example: 17
    Zone:
      type: object
      properties:
        id:
          type: string
          description: Unique id of the zone.
          example: "c74caac5-ff7e-4019-8cea-54ad82423776"
        name:
          type: string
          description: Name of the zone.
          example: "Zone A"
    CreateDeskRequest:
      type: object
      properties:
        id:
          type: string
          description: Unique id of desk with the device. Has to match the id of the Current device.
          example: c74caac5-ff7e-4019-8cea-54ad82423776
        zoneId:
          type: string
          description: Unique id of zone containing the desk.
          example: "floor-1"
        zoneName:
          type: string
          description: Display name of zone containing the desk.
          example: "Floor 1"
        deskName:
          type: string
          description: Display name of desk with the device.
          example: "Desk Desk"

  securitySchemes:
    api_key:
      type: apiKey
      name: api_key
      in: header
